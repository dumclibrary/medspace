---
image: docker:git

include:
  - project: "mclibrary/gitlab-ci"
    file: "templates/Stages.yml"
  - project: "mclibrary/gitlab-ci"
    file: "templates/Docker.inc.yml"
  - project: "mclibrary/gitlab-ci"
    file: "templates/SwarmReviewApp.inc.yml"

variables:
  MEDSPACE_IMAGE: $CI_REGISTRY/mclibrary/medspace
  FCREPO_IMAGE: $CI_REGISTRY/mclibrary/medspace/fcrepo
  SOLR_IMAGE: $CI_REGISTRY/mclibrary/medspace/solr

dependency_scanning:
  stage: "test"
  only:
    changes:
      - Gemfile
      - Gemfile.lock
  cache: {}
  image: docker:stable
  tags:
  - "docker"
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
  - docker:stable-dind
  script:
  - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
  - docker run
      --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
      --volume "$PWD:/code"
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    paths: [gl-dependency-scanning-report.json]

sast:
  stage: "test"
  only:
    changes:
      - app/**/*
      - config/**/*
      - spec/**/*
      - test/**/*
  cache: {}
  image: docker:stable
  tags:
  - "docker"
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
  - docker:stable-dind
  script:
  - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
  - docker run
      --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}"
      --volume "$PWD:/code"
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/sast:$SP_VERSION" /app/bin/run /code
  artifacts:
    paths: [gl-sast-report.json]

publish-dependencies-image:
  stage: "pre-publish"
  only:
    changes:
      - "Gemfile"
      - "Gemfile.lock"
      - "Dockerfile-dependencies"
      - ".gitlab-ci.yml"
  variables:
    DOCKERFILE: "Dockerfile-dependencies"
    TAG: "${CI_REGISTRY_IMAGE}:dependencies"
  extends: ".docker-publish"

publish-review-image:
  only:
    changes:
      - "app/**/*"
      - "bin/**/*"
      - "config/**/*"
      - "lib/**/*"
      - "public/**/*"
      - "vendor/**/*"
      - "Gemfile"
      - "Gemfile.lock"
      - "Dockerfile"
      - ".gitlab-ci.yml"
  extends: ".publish-review-image"

publish-solr-image:
  only:
    changes:
      - "solr/**/*"
      - ".gitlab-ci.yml"
  variables:
    CONTEXT: "solr"
    DOCKERFILE: "solr/Dockerfile"
    TAG: "${CI_REGISTRY_IMAGE}/solr:latest"
  extends: ".docker-publish"

publish-fcrepo-image:
  only:
    changes:
      - "docker-fcrepo/**/*"
      - ".gitlab-ci.yml"
  variables:
    CONTEXT: "solr"
    DOCKERFILE: "docker-fcrepo/Dockerfile"
    TAG: "${CI_REGISTRY_IMAGE}/fcrepo:latest"
  extends: ".docker-publish"

publish-solr-ci-image:
  stage: "pre-build"
  only:
    changes:
      - "solr/**/*"
      - ".gitlab-ci.yml"
  variables:
    CONTEXT: "solr"
    DOCKERFILE: "solr/Dockerfile-ci"
    TAG: "${CI_REGISTRY_IMAGE}/solr:ci"
  extends: ".docker-publish"

review-app:
  variables:
    STORAGE_ENV: "dev"
    FCREPO_URL: "http://medspace_fcrepo_dev:8080"
    SOLR_URL: "http://medspace_solr_dev:8983/solr/medspace"
    DATABASE_NAME: "medspace_dev"
  extends: ".review-app"

review-app-master:
  variables:
    STORAGE_ENV: "dev"
    ENV: "production"
    FCREPO_URL: "http://medspace_fcrepo_dev:8080"
    SOLR_URL: "http://medspace_solr_dev:8983/solr/medspace"
    DATABASE_NAME: "medspace_dev"
  extends: ".review-app-master"

deploy-solr:
  stage: "deploy"
  script:
    - "docker stack deploy --prune --with-registry-auth --compose-file=docker-compose.solr.yml medspace_solr"
  extends: ".swarm-login"
  when: "manual"

deploy-redis:
  stage: "deploy"
  script:
    - "- docker stack deploy --prune --with-registry-auth --compose-file=docker-compose.redis.yml medspace_redis"
  when: "manual"
  extends: ".swarm-login"

deploy-fcrepo:
  stage: "deploy"
  script:
    - "docker stack deploy --prune --with-registry-auth --compose-file=docker-compose.fcrepo.yml medspace_fcrepo"
  when: "manual"
  extends: ".swarm-login"

test:
  stage: test
  only:
    changes:
      - app/**/*
      - spec/**/*
      - test/**/*
  image: $CI_REGISTRY/mclibrary/medspace
  services:
    - redis:3-alpine
    - $CI_REGISTRY/mclibrary/medspace/solr:ci
    - $CI_REGISTRY/mclibrary/medspace/fcrepo
  variables:
    REDIS_HOST: redis
    FCREPO_URL: http://$CI_REGISTRY-mclibrary-medspace-fcrepo:8080
    SOLR_URL: http://$CI_REGISTRY-mclibrary-medspace-solr:8983/solr/medspace
  script:
    - bundle install
    - bin/rails db:migrate RAILS_ENV=test
    - bundle exec rspec
