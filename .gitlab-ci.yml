---
image: docker:git

include:
  - project: "mclibrary/gitlab-ci"
    file: "templates/Stages.yml"
  - project: "mclibrary/gitlab-ci"
    file: "templates/Docker.inc.yml"
  - project: "mclibrary/gitlab-ci"
    file: "templates/SwarmReviewApp.inc.yml"

variables:
  MEDSPACE_IMAGE: $CI_REGISTRY/mclibrary/medspace
  FCREPO_IMAGE: $CI_REGISTRY/mclibrary/medspace/fcrepo
  SOLR_IMAGE: $CI_REGISTRY/mclibrary/medspace/solr

dependency_scanning:
  stage: "test"
  only:
    changes:
      - Gemfile
      - Gemfile.lock
  cache: {}
  image: docker:stable
  tags:
  - "docker"
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
  - docker:stable-dind
  script:
  - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
  - docker run
      --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
      --volume "$PWD:/code"
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    paths: [gl-dependency-scanning-report.json]

sast:
  stage: "test"
  only:
    changes:
      - app/**/*
      - config/**/*
      - spec/**/*
      - test/**/*
  cache: {}
  image: docker:stable
  tags:
  - "docker"
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
  - docker:stable-dind
  script:
  - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
  - docker run
      --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}"
      --volume "$PWD:/code"
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/sast:$SP_VERSION" /app/bin/run /code
  artifacts:
    paths: [gl-sast-report.json]

build-dependencies-image:
  stage: "pre-publish"
  only:
    - "schedules"
  variables:
    DOCKERFILE: "Dockerfile-dependencies"
    TAG: "${CI_REGISTRY_IMAGE}:dependencies"
  extends: ".docker-publish"

publish-review-image:
  only:
    changes:
      - "app/**/*"
      - "bin/**/*"
      - "config/**/*"
      - "lib/**/*"
      - "public/**/*"
      - "vendor/**/*"
      - "Gemfile"
      - "Gemfile.lock"
      - "Dockerfile"
  extends: ".publish-review-image"

publish-solr-image:
  only:
    changes:
      - "solr/**/*"
  variables:
    CONTEXT: "solr"
    DOCKERFILE: "solr/Dockerfile"
    TAG: "${CI_REGISTRY_IMAGE}/solr:latest"
  extends: ".docker-publish"

publish-fcrepo-image:
  only:
    changes:
      - "docker-fcrepo/**/*"
  variables:
    CONTEXT: "solr"
    DOCKERFILE: "docker-fcrepo/Dockerfile"
    TAG: "${CI_REGISTRY_IMAGE}/fcrepo:latest"
  extends: ".docker-publish"

publish-solr-ci-image:
  stage: "pre-build"
  only:
    changes:
      - "solr/**/*"
  variables:
    CONTEXT: "solr"
    DOCKERFILE: "solr/Dockerfile-ci"
    TAG: "${CI_REGISTRY_IMAGE}/solr:ci"
  extends: ".docker-publish"

review-app:
  variables:
    STORAGE_ENV: "dev"
    FCREPO_URL: "http://medspace_fcrepo_dev:8080"
    SOLR_URL: "http://medspace_solr_dev:8983/solr/medspace"
    DATABASE_NAME: "medspace_dev"
  extends: ".review-app"

review-app-master:
  variables:
    STORAGE_ENV: "dev"
    ENV: "production"
    FCREPO_URL: "http://medspace_fcrepo_dev:8080"
    SOLR_URL: "http://medspace_solr_dev:8983/solr/medspace"
    DATABASE_NAME: "medspace_dev"
  extends: ".review-app-master"

test:
  stage: test
  only:
    changes:
      - app/**/*
      - spec/**/*
      - test/**/*
  image: $CI_REGISTRY/mclibrary/medspace
  services:
    - redis:3-alpine
    - $CI_REGISTRY/mclibrary/medspace/solr:ci
    - $CI_REGISTRY/mclibrary/medspace/fcrepo
  variables:
    REDIS_HOST: redis
    FCREPO_URL: http://$CI_REGISTRY-mclibrary-medspace-fcrepo:8080
    SOLR_URL: http://$CI_REGISTRY-mclibrary-medspace-solr:8983/solr/medspace
  script:
    - bundle install
    - bin/rails db:migrate RAILS_ENV=test
    - bundle exec rspec

#review_app:
#  stage: deploy
#  except:
#    - master
#  variables:
#    DOCKER_HOST: tcp://mcl-linville.vm.duke.edu:2376
#    DOCKER_TLS_VERIFY: 1
#    STORAGE_ENV: dev
#    FCREPO_URL: "http://medspace_fcrepo_dev:8080"
#    SOLR_URL: "http://medspace_solr_dev:8983/solr/medspace"
#    DATABASE_NAME: medspace_dev
#    HOST_URL: "${CI_ENVIRONMENT_SLUG}.dev.mclibrary.duke.edu"
#  image: docker:latest
#  script:
#    - mkdir -p ~/.docker
#    - echo "$DOCKER_SWARM_TLSCACERT" > ~/.docker/ca.pem
#    - echo "$DOCKER_SWARM_TLSCERT" > ~/.docker/cert.pem
#    - echo "$DOCKER_SWARM_TLSKEY" > ~/.docker/key.pem
#    - docker login -u "$DEPLOY_TOKEN_NAME" -p "$DEPLOY_TOKEN" "$CI_REGISTRY"
#    - docker stack deploy --prune --with-registry-auth --compose-file=docker-compose.fcrepo.yml medspace_fcrepo
#    - docker stack deploy --prune --with-registry-auth --compose-file=docker-compose.solr.yml medspace_solr
#    - docker stack deploy --prune --with-registry-auth --compose-file=docker-compose.redis.yml medspace_redis
#    - docker stack deploy --prune --with-registry-auth --compose-file=docker-compose.yml --compose-file=docker-compose.prod.yml medspace-${CI_ENVIRONMENT_SLUG}
#  environment:
#    name: review/$CI_COMMIT_REF_NAME
#    url: https://${CI_ENVIRONMENT_SLUG}.dev.mclibrary.duke.edu/
#    on_stop: stop_review_app
#
#review_master:
#  stage: deploy
#  only:
#    - master
#  variables:
#    DOCKER_HOST: tcp://mcl-linville.vm.duke.edu:2376
#    DOCKER_TLS_VERIFY: 1
#    STORAGE_ENV: dev
#    FCREPO_URL: "http://medspace_fcrepo_dev:8080"
#    SOLR_URL: "http://medspace_solr_dev:8983/solr/medspace"
#    DATABASE_NAME: medspace_dev
#    HOST_URL: "medspace.dev.mclibrary.duke.edu"
#  image: docker:latest
#  script:
#    - mkdir -p ~/.docker
#    - echo "$DOCKER_SWARM_TLSCACERT" > ~/.docker/ca.pem
#    - echo "$DOCKER_SWARM_TLSCERT" > ~/.docker/cert.pem
#    - echo "$DOCKER_SWARM_TLSKEY" > ~/.docker/key.pem
#    - docker login -u "$DEPLOY_TOKEN_NAME" -p "$DEPLOY_TOKEN" "$CI_REGISTRY"
#    - docker stack deploy --prune --with-registry-auth --compose-file=docker-compose.fcrepo.yml medspace_fcrepo
#    - docker stack deploy --prune --with-registry-auth --compose-file=docker-compose.solr.yml medspace_solr
#    - docker stack deploy --prune --with-registry-auth --compose-file=docker-compose.redis.yml medspace_redis
#    - docker stack deploy --prune --with-registry-auth --compose-file=docker-compose.yml --compose-file=docker-compose.prod.yml medspace-${CI_ENVIRONMENT_SLUG}
#  environment:
#    name: review-$CI_COMMIT_REF_NAME
#    url: https://medspace.dev.mclibrary.duke.edu/
#
#
#medspace_build:
#  stage: build

#  services:
#    - docker:dind
#  before_script:
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
#  script:
#    - docker pull $MEDSPACE_IMAGE:latest || true
#    - docker build --cache-from $MEDSPACE_IMAGE:latest -t $MEDSPACE_IMAGE .
#    - docker push $MEDSPACE_IMAGE
#  tags:
#    - docker
#
#fcrepo_build:
#  stage: build
#  only:
#    changes:
#      - docker-fcrepo/**/*
#  services:
#    - docker:dind
#  before_script:
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
#  script:
#    - docker build -t $FCREPO_IMAGE docker-fcrepo
#    - docker push $FCREPO_IMAGE
#  tags:
#    - docker
#